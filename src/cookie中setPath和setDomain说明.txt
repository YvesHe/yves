javax.servlet.http.Cookie有两个比较重要的方法：setDomain()、setPath() 

正常的cookie只能在一个应用中共享，即一个cookie只能由创建它的应用获得。 

1.可在同一应用服务器内共享方法：设置cookie.setPath("/"); 
本机tomcat/webapp下面有两个应用：webapp_a和webapp_b， 
1）原来在webapp_a下面设置的cookie，在webapp_b下面获取不到，path默认是产生cookie的应用的路径。 

2）若在webapp_a下面设置cookie的时候，增加一条cookie.setPath("/");或者cookie.setPath("/webapp_b/"); 
就可以在webapp_b下面获取到cas设置的cookie了。 

3）此处的参数，是相对于应用服务器存放应用的文件夹的根目录而言的(比如tomcat下面的webapp)，因此cookie.setPath("/");之后，可以在webapp文件夹下的所有应用共享cookie，而cookie.setPath("/webapp_b/"); 
是指cas应用设置的cookie只能在webapp_b应用下的获得，即便是产生这个cookie的webapp_a应用也不可以。 

4）设置cookie.setPath("/webapp_b/jsp")或者cookie.setPath("/webapp_b/jsp/")的时候，只有在webapp_b/jsp下面可以获得cookie，在webapp_b下面但是在jsp文件夹外的都不能获得cookie。 

5）设置cookie.setPath("/webapp_b");，是指在webapp_b下面才可以使用cookie，这样就不可以在产生cookie的应用webapp_a下面获取cookie了 

6）有多条cookie.setPath("XXX");语句的时候，起作用的以最后一条为准。 

2.跨域共享cookie的方法：设置cookie.setDomain(".jszx.com"); 

A机所在的域：home.langchao.com,A有应用webapp_a 
B机所在的域：jszx.com，B有应用webapp_b 
1）在webapp_a下面设置cookie的时候，增加cookie.setDomain(".jszx.com");，这样在webapp_b下面就可以取到cookie。 

2）输入url访问webapp_b的时候，必须输入域名才能解析。比如说在A机器输入：http://lc-bsp.jszx.com:8080/webapp_b,可以获取webapp_a在客户端设置的cookie，而B机器访问本机的应用，输入：http://localhost:8080/webapp_b则不可以获得cookie。 

3）设置了cookie.setDomain(".jszx.com");，还可以在默认的home.langchao.com下面共享